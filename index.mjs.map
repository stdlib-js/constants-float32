{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace constants\n*/\nvar constants = {};\n\n/**\n* @name ABS_MASK\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/abs-mask}\n*/\nimport ABS_MASK from '@stdlib/constants-float32-abs-mask';\nsetReadOnly( constants, 'ABS_MASK', ABS_MASK );\n\n/**\n* @name CBRT_EPS\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/cbrt-eps}\n*/\nimport CBRT_EPS from '@stdlib/constants-float32-cbrt-eps';\nsetReadOnly( constants, 'CBRT_EPS', CBRT_EPS );\n\n/**\n* @name E\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/e}\n*/\nimport E from '@stdlib/constants-float32-e';\nsetReadOnly( constants, 'E', E );\n\n/**\n* @name EPS\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/eps}\n*/\nimport EPS from '@stdlib/constants-float32-eps';\nsetReadOnly( constants, 'EPS', EPS );\n\n/**\n* @name EXPONENT_BIAS\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/exponent-bias}\n*/\nimport EXPONENT_BIAS from '@stdlib/constants-float32-exponent-bias';\nsetReadOnly( constants, 'EXPONENT_BIAS', EXPONENT_BIAS );\n\n/**\n* @name EXPONENT_MASK\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/exponent-mask}\n*/\nimport EXPONENT_MASK from '@stdlib/constants-float32-exponent-mask';\nsetReadOnly( constants, 'EXPONENT_MASK', EXPONENT_MASK );\n\n/**\n* @name FOURTH_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/fourth-pi}\n*/\nimport FOURTH_PI from '@stdlib/constants-float32-fourth-pi';\nsetReadOnly( constants, 'FOURTH_PI', FOURTH_PI );\n\n/**\n* @name HALF_LN_TWO\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/half-ln-two}\n*/\nimport HALF_LN_TWO from '@stdlib/constants-float32-half-ln-two';\nsetReadOnly( constants, 'HALF_LN_TWO', HALF_LN_TWO );\n\n/**\n* @name HALF_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/half-pi}\n*/\nimport HALF_PI from '@stdlib/constants-float32-half-pi';\nsetReadOnly( constants, 'HALF_PI', HALF_PI );\n\n/**\n* @name LN_HALF\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/ln-half}\n*/\nimport LN_HALF from '@stdlib/constants-float32-ln-half';\nsetReadOnly( constants, 'LN_HALF', LN_HALF );\n\n/**\n* @name LN_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/ln-pi}\n*/\nimport LN_PI from '@stdlib/constants-float32-ln-pi';\nsetReadOnly( constants, 'LN_PI', LN_PI );\n\n/**\n* @name LN_TEN\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/ln-ten}\n*/\nimport LN_TEN from '@stdlib/constants-float32-ln-ten';\nsetReadOnly( constants, 'LN_TEN', LN_TEN );\n\n/**\n* @name LN_TWO\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/ln-two}\n*/\nimport LN_TWO from '@stdlib/constants-float32-ln-two';\nsetReadOnly( constants, 'LN_TWO', LN_TWO );\n\n/**\n* @name MAX\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max}\n*/\nimport MAX from '@stdlib/constants-float32-max';\nsetReadOnly( constants, 'MAX', MAX );\n\n/**\n* @name MAX_BASE2_EXPONENT\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-base2-exponent}\n*/\nimport MAX_BASE2_EXPONENT from '@stdlib/constants-float32-max-base2-exponent';\nsetReadOnly( constants, 'MAX_BASE2_EXPONENT', MAX_BASE2_EXPONENT );\n\n/**\n* @name MAX_BASE2_EXPONENT_SUBNORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-base2-exponent-subnormal}\n*/\nimport MAX_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants-float32-max-base2-exponent-subnormal';\nsetReadOnly( constants, 'MAX_BASE2_EXPONENT_SUBNORMAL', MAX_BASE2_EXPONENT_SUBNORMAL );\n\n/**\n* @name MAX_BASE10_EXPONENT\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-base10-exponent}\n*/\nimport MAX_BASE10_EXPONENT from '@stdlib/constants-float32-max-base10-exponent';\nsetReadOnly( constants, 'MAX_BASE10_EXPONENT', MAX_BASE10_EXPONENT );\n\n/**\n* @name MAX_BASE10_EXPONENT_SUBNORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-base10-exponent-subnormal}\n*/\nimport MAX_BASE10_EXPONENT_SUBNORMAL from '@stdlib/constants-float32-max-base10-exponent-subnormal';\nsetReadOnly( constants, 'MAX_BASE10_EXPONENT_SUBNORMAL', MAX_BASE10_EXPONENT_SUBNORMAL );\n\n/**\n* @name MAX_SAFE_FIBONACCI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-safe-fibonacci}\n*/\nimport MAX_SAFE_FIBONACCI from '@stdlib/constants-float32-max-safe-fibonacci';\nsetReadOnly( constants, 'MAX_SAFE_FIBONACCI', MAX_SAFE_FIBONACCI );\n\n/**\n* @name MAX_SAFE_INTEGER\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-safe-integer}\n*/\nimport MAX_SAFE_INTEGER from '@stdlib/constants-float32-max-safe-integer';\nsetReadOnly( constants, 'MAX_SAFE_INTEGER', MAX_SAFE_INTEGER );\n\n/**\n* @name MAX_SAFE_NTH_FACTORIAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-safe-nth-factorial}\n*/\nimport MAX_SAFE_NTH_FACTORIAL from '@stdlib/constants-float32-max-safe-nth-factorial';\nsetReadOnly( constants, 'MAX_SAFE_NTH_FACTORIAL', MAX_SAFE_NTH_FACTORIAL );\n\n/**\n* @name MAX_SAFE_NTH_FIBONACCI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-safe-nth-fibonacci}\n*/\nimport MAX_SAFE_NTH_FIBONACCI from '@stdlib/constants-float32-max-safe-nth-fibonacci';\nsetReadOnly( constants, 'MAX_SAFE_NTH_FIBONACCI', MAX_SAFE_NTH_FIBONACCI );\n\n/**\n* @name MAX_SAFE_NTH_LUCAS\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/max-safe-nth-lucas}\n*/\nimport MAX_SAFE_NTH_LUCAS from '@stdlib/constants-float32-max-safe-nth-lucas';\nsetReadOnly( constants, 'MAX_SAFE_NTH_LUCAS', MAX_SAFE_NTH_LUCAS );\n\n/**\n* @name MIN_BASE2_EXPONENT\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/min-base2-exponent}\n*/\nimport MIN_BASE2_EXPONENT from '@stdlib/constants-float32-min-base2-exponent';\nsetReadOnly( constants, 'MIN_BASE2_EXPONENT', MIN_BASE2_EXPONENT );\n\n/**\n* @name MIN_BASE2_EXPONENT_SUBNORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/min-base2-exponent-subnormal}\n*/\nimport MIN_BASE2_EXPONENT_SUBNORMAL from '@stdlib/constants-float32-min-base2-exponent-subnormal';\nsetReadOnly( constants, 'MIN_BASE2_EXPONENT_SUBNORMAL', MIN_BASE2_EXPONENT_SUBNORMAL );\n\n/**\n* @name MIN_BASE10_EXPONENT\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/min-base10-exponent}\n*/\nimport MIN_BASE10_EXPONENT from '@stdlib/constants-float32-min-base10-exponent';\nsetReadOnly( constants, 'MIN_BASE10_EXPONENT', MIN_BASE10_EXPONENT );\n\n/**\n* @name MIN_BASE10_EXPONENT_SUBNORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/min-base10-exponent-subnormal}\n*/\nimport MIN_BASE10_EXPONENT_SUBNORMAL from '@stdlib/constants-float32-min-base10-exponent-subnormal';\nsetReadOnly( constants, 'MIN_BASE10_EXPONENT_SUBNORMAL', MIN_BASE10_EXPONENT_SUBNORMAL );\n\n/**\n* @name MIN_SAFE_INTEGER\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/min-safe-integer}\n*/\nimport MIN_SAFE_INTEGER from '@stdlib/constants-float32-min-safe-integer';\nsetReadOnly( constants, 'MIN_SAFE_INTEGER', MIN_SAFE_INTEGER );\n\n/**\n* @name NAN\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/nan}\n*/\nimport NAN from '@stdlib/constants-float32-nan';\nsetReadOnly( constants, 'NAN', NAN );\n\n/**\n* @name NINF\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/ninf}\n*/\nimport NINF from '@stdlib/constants-float32-ninf';\nsetReadOnly( constants, 'NINF', NINF );\n\n/**\n* @name NUM_BYTES\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/num-bytes}\n*/\nimport NUM_BYTES from '@stdlib/constants-float32-num-bytes';\nsetReadOnly( constants, 'NUM_BYTES', NUM_BYTES );\n\n/**\n* @name PHI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/phi}\n*/\nimport PHI from '@stdlib/constants-float32-phi';\nsetReadOnly( constants, 'PHI', PHI );\n\n/**\n* @name PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/pi}\n*/\nimport PI from '@stdlib/constants-float32-pi';\nsetReadOnly( constants, 'PI', PI );\n\n/**\n* @name PINF\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/pinf}\n*/\nimport PINF from '@stdlib/constants-float32-pinf';\nsetReadOnly( constants, 'PINF', PINF );\n\n/**\n* @name PRECISION\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/precision}\n*/\nimport PRECISION from '@stdlib/constants-float32-precision';\nsetReadOnly( constants, 'PRECISION', PRECISION );\n\n/**\n* @name SIGN_MASK\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sign-mask}\n*/\nimport SIGN_MASK from '@stdlib/constants-float32-sign-mask';\nsetReadOnly( constants, 'SIGN_MASK', SIGN_MASK );\n\n/**\n* @name SIGNIFICAND_MASK\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/significand-mask}\n*/\nimport SIGNIFICAND_MASK from '@stdlib/constants-float32-significand-mask';\nsetReadOnly( constants, 'SIGNIFICAND_MASK', SIGNIFICAND_MASK );\n\n/**\n* @name SMALLEST_NORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/smallest-normal}\n*/\nimport SMALLEST_NORMAL from '@stdlib/constants-float32-smallest-normal';\nsetReadOnly( constants, 'SMALLEST_NORMAL', SMALLEST_NORMAL );\n\n/**\n* @name SMALLEST_SUBNORMAL\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/smallest-subnormal}\n*/\nimport SMALLEST_SUBNORMAL from '@stdlib/constants-float32-smallest-subnormal';\nsetReadOnly( constants, 'SMALLEST_SUBNORMAL', SMALLEST_SUBNORMAL );\n\n/**\n* @name SQRT_EPS\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-eps}\n*/\nimport SQRT_EPS from '@stdlib/constants-float32-sqrt-eps';\nsetReadOnly( constants, 'SQRT_EPS', SQRT_EPS );\n\n/**\n* @name SQRT_HALF\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-half}\n*/\nimport SQRT_HALF from '@stdlib/constants-float32-sqrt-half';\nsetReadOnly( constants, 'SQRT_HALF', SQRT_HALF );\n\n/**\n* @name SQRT_HALF_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-half-pi}\n*/\nimport SQRT_HALF_PI from '@stdlib/constants-float32-sqrt-half-pi';\nsetReadOnly( constants, 'SQRT_HALF_PI', SQRT_HALF_PI );\n\n/**\n* @name SQRT_PHI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-phi}\n*/\nimport SQRT_PHI from '@stdlib/constants-float32-sqrt-phi';\nsetReadOnly( constants, 'SQRT_PHI', SQRT_PHI );\n\n/**\n* @name SQRT_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-pi}\n*/\nimport SQRT_PI from '@stdlib/constants-float32-sqrt-pi';\nsetReadOnly( constants, 'SQRT_PI', SQRT_PI );\n\n/**\n* @name SQRT_THREE\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-three}\n*/\nimport SQRT_THREE from '@stdlib/constants-float32-sqrt-three';\nsetReadOnly( constants, 'SQRT_THREE', SQRT_THREE );\n\n/**\n* @name SQRT_TWO\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-two}\n*/\nimport SQRT_TWO from '@stdlib/constants-float32-sqrt-two';\nsetReadOnly( constants, 'SQRT_TWO', SQRT_TWO );\n\n/**\n* @name SQRT_TWO_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/sqrt-two-pi}\n*/\nimport SQRT_TWO_PI from '@stdlib/constants-float32-sqrt-two-pi';\nsetReadOnly( constants, 'SQRT_TWO_PI', SQRT_TWO_PI );\n\n/**\n* @name TWO_PI\n* @memberof constants\n* @readonly\n* @constant\n* @type {number}\n* @see {@link module:@stdlib/constants/float32/two-pi}\n*/\nimport TWO_PI from '@stdlib/constants-float32-two-pi';\nsetReadOnly( constants, 'TWO_PI', TWO_PI );\n\n\n// EXPORTS //\n\nexport default constants;\n"],"names":["constants","setReadOnly","ABS_MASK","CBRT_EPS","E","EPS","EXPONENT_BIAS","EXPONENT_MASK","FOURTH_PI","HALF_LN_TWO","HALF_PI","LN_HALF","LN_PI","LN_TEN","LN_TWO","MAX","MAX_BASE2_EXPONENT","MAX_BASE2_EXPONENT_SUBNORMAL","MAX_BASE10_EXPONENT","MAX_BASE10_EXPONENT_SUBNORMAL","MAX_SAFE_FIBONACCI","MAX_SAFE_INTEGER","MAX_SAFE_NTH_FACTORIAL","MAX_SAFE_NTH_FIBONACCI","MAX_SAFE_NTH_LUCAS","MIN_BASE2_EXPONENT","MIN_BASE2_EXPONENT_SUBNORMAL","MIN_BASE10_EXPONENT","MIN_BASE10_EXPONENT_SUBNORMAL","MIN_SAFE_INTEGER","NAN","NINF","NUM_BYTES","PHI","PI","PINF","PRECISION","SIGN_MASK","SIGNIFICAND_MASK","SMALLEST_NORMAL","SMALLEST_SUBNORMAL","SQRT_EPS","SQRT_HALF","SQRT_HALF_PI","SQRT_PHI","SQRT_PI","SQRT_THREE","SQRT_TWO","SQRT_TWO_PI","TWO_PI"],"mappings":";;6nVAoCA,IAAAA,EAAA,CAAA,EAWAC,EAAAD,EAAA,WAAAE,GAWAD,EAAAD,EAAA,WAAAG,GAWAF,EAAAD,EAAA,IAAAI,GAWAH,EAAAD,EAAA,MAAAK,GAWAJ,EAAAD,EAAA,gBAAAM,GAWAL,EAAAD,EAAA,gBAAAO,GAWAN,EAAAD,EAAA,YAAAQ,GAWAP,EAAAD,EAAA,cAAAS,GAWAR,EAAAD,EAAA,UAAAU,GAWAT,EAAAD,EAAA,UAAAW,GAWAV,EAAAD,EAAA,QAAAY,GAWAX,EAAAD,EAAA,SAAAa,GAWAZ,EAAAD,EAAA,SAAAc,GAWAb,EAAAD,EAAA,MAAAe,GAWAd,EAAAD,EAAA,qBAAAgB,GAWAf,EAAAD,EAAA,+BAAAiB,GAWAhB,EAAAD,EAAA,sBAAAkB,GAWAjB,EAAAD,EAAA,gCAAAmB,GAWAlB,EAAAD,EAAA,qBAAAoB,GAWAnB,EAAAD,EAAA,mBAAAqB,GAWApB,EAAAD,EAAA,yBAAAsB,GAWArB,EAAAD,EAAA,yBAAAuB,GAWAtB,EAAAD,EAAA,qBAAAwB,GAWAvB,EAAAD,EAAA,qBAAAyB,GAWAxB,EAAAD,EAAA,+BAAA0B,GAWAzB,EAAAD,EAAA,sBAAA2B,GAWA1B,EAAAD,EAAA,gCAAA4B,GAWA3B,EAAAD,EAAA,mBAAA6B,GAWA5B,EAAAD,EAAA,MAAA8B,GAWA7B,EAAAD,EAAA,OAAA+B,GAWA9B,EAAAD,EAAA,YAAAgC,GAWA/B,EAAAD,EAAA,MAAAiC,GAWAhC,EAAAD,EAAA,KAAAkC,GAWAjC,EAAAD,EAAA,OAAAmC,GAWAlC,EAAAD,EAAA,YAAAoC,GAWAnC,EAAAD,EAAA,YAAAqC,GAWApC,EAAAD,EAAA,mBAAAsC,GAWArC,EAAAD,EAAA,kBAAAuC,GAWAtC,EAAAD,EAAA,qBAAAwC,GAWAvC,EAAAD,EAAA,WAAAyC,GAWAxC,EAAAD,EAAA,YAAA0C,GAWAzC,EAAAD,EAAA,eAAA2C,GAWA1C,EAAAD,EAAA,WAAA4C,GAWA3C,EAAAD,EAAA,UAAA6C,GAWA5C,EAAAD,EAAA,aAAA8C,GAWA7C,EAAAD,EAAA,WAAA+C,GAWA9C,EAAAD,EAAA,cAAAgD,GAWA/C,EAAAD,EAAA,SAAAiD"}